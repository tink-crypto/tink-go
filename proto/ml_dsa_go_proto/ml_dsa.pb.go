// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
///////////////////////////////////////////////////////////////////////////////

// Protos for Module-Lattice Digital Signature Algorithm (ML-DSA).
// See https://csrc.nist.gov/pubs/fips/204/final.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        v3.21.12
// source: ml_dsa.proto

package ml_dsa_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MlDsaInstance int32

const (
	MlDsaInstance_ML_DSA_UNKNOWN_INSTANCE MlDsaInstance = 0
	MlDsaInstance_ML_DSA_65               MlDsaInstance = 1
)

// Enum value maps for MlDsaInstance.
var (
	MlDsaInstance_name = map[int32]string{
		0: "ML_DSA_UNKNOWN_INSTANCE",
		1: "ML_DSA_65",
	}
	MlDsaInstance_value = map[string]int32{
		"ML_DSA_UNKNOWN_INSTANCE": 0,
		"ML_DSA_65":               1,
	}
)

func (x MlDsaInstance) Enum() *MlDsaInstance {
	p := new(MlDsaInstance)
	*p = x
	return p
}

func (x MlDsaInstance) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MlDsaInstance) Descriptor() protoreflect.EnumDescriptor {
	return file_ml_dsa_proto_enumTypes[0].Descriptor()
}

func (MlDsaInstance) Type() protoreflect.EnumType {
	return &file_ml_dsa_proto_enumTypes[0]
}

func (x MlDsaInstance) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MlDsaInstance.Descriptor instead.
func (MlDsaInstance) EnumDescriptor() ([]byte, []int) {
	return file_ml_dsa_proto_rawDescGZIP(), []int{0}
}

type MlDsaParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required.
	MlDsaInstance MlDsaInstance `protobuf:"varint,1,opt,name=ml_dsa_instance,json=mlDsaInstance,proto3,enum=google.crypto.tink.MlDsaInstance" json:"ml_dsa_instance,omitempty"`
}

func (x *MlDsaParams) Reset() {
	*x = MlDsaParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_dsa_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MlDsaParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MlDsaParams) ProtoMessage() {}

func (x *MlDsaParams) ProtoReflect() protoreflect.Message {
	mi := &file_ml_dsa_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MlDsaParams.ProtoReflect.Descriptor instead.
func (*MlDsaParams) Descriptor() ([]byte, []int) {
	return file_ml_dsa_proto_rawDescGZIP(), []int{0}
}

func (x *MlDsaParams) GetMlDsaInstance() MlDsaInstance {
	if x != nil {
		return x.MlDsaInstance
	}
	return MlDsaInstance_ML_DSA_UNKNOWN_INSTANCE
}

type MlDsaKeyFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required.
	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Required.
	Params *MlDsaParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *MlDsaKeyFormat) Reset() {
	*x = MlDsaKeyFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_dsa_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MlDsaKeyFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MlDsaKeyFormat) ProtoMessage() {}

func (x *MlDsaKeyFormat) ProtoReflect() protoreflect.Message {
	mi := &file_ml_dsa_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MlDsaKeyFormat.ProtoReflect.Descriptor instead.
func (*MlDsaKeyFormat) Descriptor() ([]byte, []int) {
	return file_ml_dsa_proto_rawDescGZIP(), []int{1}
}

func (x *MlDsaKeyFormat) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *MlDsaKeyFormat) GetParams() *MlDsaParams {
	if x != nil {
		return x.Params
	}
	return nil
}

// key_type: type.googleapis.com/google.crypto.tink.MlDsaPublicKey
type MlDsaPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required.
	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Required.
	KeyValue []byte `protobuf:"bytes,2,opt,name=key_value,json=keyValue,proto3" json:"key_value,omitempty"`
	// Required.
	Params *MlDsaParams `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *MlDsaPublicKey) Reset() {
	*x = MlDsaPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_dsa_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MlDsaPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MlDsaPublicKey) ProtoMessage() {}

func (x *MlDsaPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_ml_dsa_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MlDsaPublicKey.ProtoReflect.Descriptor instead.
func (*MlDsaPublicKey) Descriptor() ([]byte, []int) {
	return file_ml_dsa_proto_rawDescGZIP(), []int{2}
}

func (x *MlDsaPublicKey) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *MlDsaPublicKey) GetKeyValue() []byte {
	if x != nil {
		return x.KeyValue
	}
	return nil
}

func (x *MlDsaPublicKey) GetParams() *MlDsaParams {
	if x != nil {
		return x.Params
	}
	return nil
}

// key_type: type.googleapis.com/google.crypto.tink.MlDsaPrivateKey
type MlDsaPrivateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required.
	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Required. Note that this contains the seed used to generate the private
	// key, not the private key itself.
	KeyValue []byte `protobuf:"bytes,2,opt,name=key_value,json=keyValue,proto3" json:"key_value,omitempty"`
	// The corresponding public key.
	PublicKey *MlDsaPublicKey `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *MlDsaPrivateKey) Reset() {
	*x = MlDsaPrivateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_dsa_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MlDsaPrivateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MlDsaPrivateKey) ProtoMessage() {}

func (x *MlDsaPrivateKey) ProtoReflect() protoreflect.Message {
	mi := &file_ml_dsa_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MlDsaPrivateKey.ProtoReflect.Descriptor instead.
func (*MlDsaPrivateKey) Descriptor() ([]byte, []int) {
	return file_ml_dsa_proto_rawDescGZIP(), []int{3}
}

func (x *MlDsaPrivateKey) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *MlDsaPrivateKey) GetKeyValue() []byte {
	if x != nil {
		return x.KeyValue
	}
	return nil
}

func (x *MlDsaPrivateKey) GetPublicKey() *MlDsaPublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

var File_ml_dsa_proto protoreflect.FileDescriptor

var file_ml_dsa_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6d, 0x6c, 0x5f, 0x64, 0x73, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x69,
	0x6e, 0x6b, 0x22, 0x58, 0x0a, 0x0b, 0x4d, 0x6c, 0x44, 0x73, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x49, 0x0a, 0x0f, 0x6d, 0x6c, 0x5f, 0x64, 0x73, 0x61, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e,
	0x4d, 0x6c, 0x44, 0x73, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0d, 0x6d,
	0x6c, 0x44, 0x73, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x63, 0x0a, 0x0e,
	0x4d, 0x6c, 0x44, 0x73, 0x61, 0x4b, 0x65, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x4d, 0x6c,
	0x44, 0x73, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x4d, 0x6c, 0x44, 0x73, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x69, 0x6e, 0x6b,
	0x2e, 0x4d, 0x6c, 0x44, 0x73, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x4d, 0x6c, 0x44, 0x73, 0x61, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x41, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x4d, 0x6c, 0x44, 0x73, 0x61, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x2a, 0x3b, 0x0a, 0x0d, 0x4d, 0x6c, 0x44, 0x73, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x4c, 0x5f, 0x44, 0x53, 0x41, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x4c, 0x5f, 0x44, 0x53, 0x41, 0x5f, 0x36, 0x35, 0x10, 0x01, 0x42,
	0x56, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x69,
	0x6e, 0x6b, 0x2d, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x74, 0x69, 0x6e, 0x6b, 0x2d, 0x67,
	0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6c, 0x5f, 0x64, 0x73,
	0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ml_dsa_proto_rawDescOnce sync.Once
	file_ml_dsa_proto_rawDescData = file_ml_dsa_proto_rawDesc
)

func file_ml_dsa_proto_rawDescGZIP() []byte {
	file_ml_dsa_proto_rawDescOnce.Do(func() {
		file_ml_dsa_proto_rawDescData = protoimpl.X.CompressGZIP(file_ml_dsa_proto_rawDescData)
	})
	return file_ml_dsa_proto_rawDescData
}

var file_ml_dsa_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ml_dsa_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ml_dsa_proto_goTypes = []interface{}{
	(MlDsaInstance)(0),      // 0: google.crypto.tink.MlDsaInstance
	(*MlDsaParams)(nil),     // 1: google.crypto.tink.MlDsaParams
	(*MlDsaKeyFormat)(nil),  // 2: google.crypto.tink.MlDsaKeyFormat
	(*MlDsaPublicKey)(nil),  // 3: google.crypto.tink.MlDsaPublicKey
	(*MlDsaPrivateKey)(nil), // 4: google.crypto.tink.MlDsaPrivateKey
}
var file_ml_dsa_proto_depIdxs = []int32{
	0, // 0: google.crypto.tink.MlDsaParams.ml_dsa_instance:type_name -> google.crypto.tink.MlDsaInstance
	1, // 1: google.crypto.tink.MlDsaKeyFormat.params:type_name -> google.crypto.tink.MlDsaParams
	1, // 2: google.crypto.tink.MlDsaPublicKey.params:type_name -> google.crypto.tink.MlDsaParams
	3, // 3: google.crypto.tink.MlDsaPrivateKey.public_key:type_name -> google.crypto.tink.MlDsaPublicKey
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ml_dsa_proto_init() }
func file_ml_dsa_proto_init() {
	if File_ml_dsa_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ml_dsa_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MlDsaParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_dsa_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MlDsaKeyFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_dsa_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MlDsaPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_dsa_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MlDsaPrivateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ml_dsa_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ml_dsa_proto_goTypes,
		DependencyIndexes: file_ml_dsa_proto_depIdxs,
		EnumInfos:         file_ml_dsa_proto_enumTypes,
		MessageInfos:      file_ml_dsa_proto_msgTypes,
	}.Build()
	File_ml_dsa_proto = out.File
	file_ml_dsa_proto_rawDesc = nil
	file_ml_dsa_proto_goTypes = nil
	file_ml_dsa_proto_depIdxs = nil
}
